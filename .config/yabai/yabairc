#! /usr/bin/env zsh

# todo:
# - when slack huddle opens, float it at a certain size, has `Huddle in the name`
# - check out this wallpaper https://github.com/dominiklohmann/25th-hour
# - padding on ultrawide, one app
# - when swapping to bsp from stack on laptop, need to make everything opaque again, yes defo an issue!
# - when on a stack, make top one float, need to make one underneath opaque
# - if spawning a window from a floating window, it should float on top of existing window
# - mail in a space @done
# - centering floated window (without resize) - g? shift+g to hide everything else?
# - obsidian in a space? could be stacked by default. on inbuilt
# - how about shifting space to another display shortcut?
# - two wide, on top of each other, windows could be handy for some tasks, key to do that
# - sometimes, dev 4 isn't in bsp mode and then things don't work - how to tell? indicator next to space?
# - also next / prev window in app doesn't always work
# - sometimes on "home", window becomes "not stacked" how to restack?
# - shift apps to spaces on reload
# - a way to hide everything else on display (ctrl+m?)
# - unminimise, kinda like hyper works but for all apps, can be done with weird command+tab, select app, take finger off command
# - restore hidden apps to where the were when unhiding

# references:
# [stacking](https://github.com/koekeishiya/yabai/issues/203)
# [travers hs config](https://github.com/evantravers/dotfiles/blob/master/.config/hammerspoon/init.lua)
# [centre app if only one running](https://github.com/koekeishiya/yabai/issues/975)
# [ultrawide padding example](https://github.com/donaldguy/dotfiles/blob/749c564f6b5f8f1d22ecc7f593cad5c8d80f8bd0/executable_dot_yabairc)
# [3 column handling](https://github.com/koekeishiya/yabai/issues/157)
# [keep windows attached to spaces when display detached/attached](https://github.com/koekeishiya/yabai/discussions/238#issuecomment-530400722)
# [restore/store size and position](https://github.com/koekeishiya/yabai/issues/435)
# [changing whether floating windows are above others](https://github.com/koekeishiya/yabai/issues/2170)

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# turn on debug
# yabai -m config debug_output on

# defaults
yabai                         -m           config \
    external_bar              all:32:0     \
    top_padding               20           \
    bottom_padding            20           \
    left_padding              20           \
    right_padding             20           \
    window_gap                20           \
    window_opacity            on           \
    window_animation_duration 0.0          \
    window_placement          second_child \
    active_window_opacity     1.0          \
    normal_window_opacity     1.0          \
    window_shadow             float        \
    auto_balance              off          \
    split_type                vertical     \
    split_ratio               0.5          \
    insert_feedback_color     0x9999a4bc   \
    layout                    bsp          \
    mouse_drop_action         swap

setup_space() {
  local SPACE_ID="$1"
  local NAME="$2"
  local LAYOUT="$3"
  local DISPLAY_ID="$4"

  local SPACE=
  echo "Setup space $SPACE_ID : $NAME"

  SPACE=$(yabai -m query --spaces --space "$SPACE_ID")
  if [[ -z "$SPACE" ]]; then
    yabai -m space --create "$DISPLAY"
  fi

  DISPLAY=$(yabai -m query --displays --display "$DISPLAY_ID")
  if [[ -z "$DISPLAY" ]]; then
    DISPLAY_ID=1
  fi

  # todo: make more general, shift the reverse too
  if [[ "$DISPLAY_ID" == "2" ]]; then
    SPACE=$(yabai -m query --spaces --space "$SPACE_ID")
    SPACE_DISPLAY=$(echo "$SPACE" | jq -r '.display')
    if [[ "$DISPLAY_ID" != "$SPACE_DISPLAY" ]]; then
      yabai -m space "$SPACE_ID" --display "$DISPLAY_ID"
    fi
  fi

  yabai -m space "$SPACE_ID" --label "$NAME"
  yabai -m config --space "$SPACE_ID" layout "$LAYOUT"
  yabai -m display "$DISPLAY_ID" --space "$SPACE_ID"
}

setup_space 1 home stack 1
setup_space 2 mail bsp 1
setup_space 3 chat stack 1
setup_space 4 db stack 1
setup_space 5 dev bsp 2
setup_space 6 view float 2

# remove space 7, sometimes shows up?
# todo: make this more general, destroy all empty spaces that we don't want
SPACE7=$(yabai -m query --spaces --space 7)
if [[ ! "$SPACE7" =~ 'could not locate' ]]; then
  WINDOW_IDS=($(echo "$SPACE7" | jq -r '."windows" | @sh'))
  if [[ "$WINDOW_IDS" == "" ]]; then
    yabai -m space --destroy 7
  fi
fi

# rules
# unmanaged, exact matches
yabai -m rule --add app="^(Calculator|Software Update|Dictionary|VLC|zoom.us|Photo Booth|Archive Utility|LibreOffice|App Store|Steam|Alfred|Alfred Preferences|Activity Monitor|System Information|Karabiner-Elements|Karabiner-EventViewer|Preview|Disk Utility|Connect to Server|Anki|Docker Desktop|VeraCrypt|qView|Transmit|Transmission)$" manage=off
yabai -m rule --add app="^(System Preferences|System Settings)$" manage=off sticky=on
yabai -m rule --add app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref|AirDrop|Emptying)" manage=off space=^1
yabai -m rule --add app="^OmniFocus" title="^Choose" manage=off
yabai -m rule --add app="^Calendar" title="(General|^$)" manage=off
yabai -m rule --add app="^TablePlus" manage=off
yabai -m rule --add app="^Chrome" role="^AXSheet" manage=off
yabai -m rule --add role="AXPopover" manage=off
yabai -m rule --add app="^(Little Snitch|CleanShot|Mirth|Keychain|zoom|Zoom|OpenVPN|Microsoft Teams|Coherence|Microsoft Remote Desktop|Insta360|Adobe)" manage=off

# send apps to specific displays or spaces
yabai -m rule --add app="^Messages" space=^3
yabai -m rule --add app="^Slack" space=^3
yabai -m rule --add app="^Slack" title="^Huddle" manage=off display=^2 space=^6
yabai -m rule --add app="^(Thunderbird|thunderbird)" space=^2
yabai -m rule --add app="^Mail" space=^2
yabai -m rule --add app="^TablePlus" space=^4
yabai -m rule --add app="^(Kitty|kitty)" space=^5
yabai -m rule --add app="^(Docker|OpenVPN|OmniFocus|Calendar|Chrome)" space=^1

# signals i.e. events that then call scripts
yabai -m signal --add event=window_created action="$HOME/.config/yabai/window_created.sh"
yabai -m signal --add event=window_destroyed action="$HOME/.config/yabai/window_destroyed.sh"
yabai -m signal --add event=application_hidden action="$HOME/.config/yabai/window_destroyed.sh"
yabai -m signal --add event=window_minimized action="$HOME/.config/yabai/window_destroyed.sh"
yabai -m signal --add event=window_focused action="$HOME/.config/yabai/window_focused.sh"
yabai -m signal --add event=application_launched action="$HOME/.config/yabai/application_launched.sh"
yabai -m signal --add event=application_visible action="$HOME/.config/yabai/application_visible.sh"
yabai -m signal --add event=window_deminimized action="$HOME/.config/yabai/application_visible.sh"
yabai -m signal --add event=display_added action="$HOME/.config/yabai/display_added.sh"
yabai -m signal --add event=application_front_switched action="$HOME/.config/yabai/window_focused.sh"

# this doesn't seem to do much on reload, but eh
yabai -m space --focus 1
